{"version":3,"file":"runner.js","sources":["../src/utility/glslTemplate.ts","../src/shaders/vertex.ts","../src/shaders/oscillator.ts","../src/shaders/invertRGB.ts","../src/utility/glHelpers.ts","../src/utility/resizeCanvas.ts","../src/render.ts","../src/runner.ts"],"sourcesContent":["export function glsl(literals: TemplateStringsArray) {\n\treturn literals.join('');\n}\n\n","import { glsl } from 'utility/glslTemplate';\n\nexport default glsl`\n\tattribute vec2 position;\n\tattribute vec2 a_texCoord;\n\n\tvarying vec2 v_texCoord;\n\n\tvoid main() {\n\t\tgl_Position = vec4(position, 0, 1);\n\t\tv_texCoord = a_texCoord;\n\t}\n`;\n","import { glsl } from 'utility/glslTemplate';\n\nexport default glsl`\n\tprecision mediump float;\n\n\tvoid main() {\n\t\tfloat t = 2.;\n\t\tfloat period = 1.;\n\t\tfloat pixelIndexScaling = 0.0001;\n\t\tvec2 resolution = vec2(800., 800.);\n\n\t\tfloat pixelIndex =\n\t\t\t(gl_FragCoord.x + gl_FragCoord.y * resolution.x) * pixelIndexScaling;\n\n\t\tgl_FragColor = vec4(\n\t\t\t\tvec3((sin(period * (pixelIndex + t)) + 1.) / 2.),\n\t\t\t\t1);\n\t}\n`;\n","import { glsl } from 'utility/glslTemplate';\n\nexport default glsl`\n\tprecision mediump float;\n\n\tuniform sampler2D inputTexture;\n\tuniform vec2 inputTextureDimensions;\n\n\tvoid main() {\n\t\tvec4 inverted = 1. - texture2D(inputTexture, gl_FragCoord.xy / inputTextureDimensions);\n\t\tgl_FragColor = vec4(\n\t\t\tinverted.rgb,\n\t\t\t1);\n\t}\n`;\n","import {\n\tShaderType, BufferHint, AttributeType, BufferData\n} from 'utility/glTypes';\n\nexport function createProgram(gl: WebGLRenderingContext, shaders: WebGLShader[]): WebGLProgram {\n\tconst program = gl.createProgram();\n\tshaders.forEach(shader => gl.attachShader(program, shader));\n\tgl.linkProgram(program);\n\tif (gl.getProgramParameter(program, gl.LINK_STATUS) && program != null) {\n\t\treturn program;\n\t} else {\n\t\tconst infoLog = gl.getProgramInfoLog(program) as string;\n\t\tgl.deleteProgram(program);\n\t\tthrow new Error(infoLog);\n\t}\n}\n\nexport function createShader(gl: WebGLRenderingContext, type: ShaderType, source: string): WebGLShader {\n\tconst shader = gl.createShader(type);\n\tgl.shaderSource(shader, source);\n\tgl.compileShader(shader);\n\tif (gl.getShaderParameter(shader, gl.COMPILE_STATUS) && shader != null) {\n\t\treturn shader;\n\t} else {\n\t\tconst infoLog = gl.getShaderInfoLog(shader) as string;\n\t\tgl.deleteShader(shader);\n\t\tthrow new Error(infoLog);\n\t}\n}\n\nexport function createBuffer(gl: WebGLRenderingContext, data: BufferData, hint: BufferHint): WebGLBuffer {\n\tconst buffer = gl.createBuffer();\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.bufferData(gl.ARRAY_BUFFER, data, hint);\n\n\tif (buffer == null) {\n\t\tthrow new Error(\"Failed to create buffer\");\n\t}\n\treturn buffer;\n}\n\nexport function bindVertexAttribute(\n\tgl: WebGLRenderingContext,\n\tbuffer: WebGLBuffer,\n\tlocation: number,\n\ttype: AttributeType,\n\tnormalize: boolean\n) {\n\tif (type !== 'vec2') {\n\t\tthrow new Error(\"Unsupported attribute type\");\n\t}\n\n\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\tgl.vertexAttribPointer(location, 2, gl.FLOAT, normalize, 0, 0);\n}\n\n","// https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\nexport function resizeCanvas(canvas: HTMLCanvasElement) {\n\tvar realToCSSPixels = window.devicePixelRatio;\n\n\t// Lookup the size the browser is displaying the canvas in CSS pixels\n\t// and compute a size needed to make our drawingbuffer match it in\n\t// device pixels.\n\tconst displayWidth =\n\t\tMath.floor(canvas.clientWidth * realToCSSPixels);\n\tconst displayHeight =\n\t\tMath.floor(canvas.clientHeight * realToCSSPixels);\n\n\t// Check if the canvas is not the same size.\n\tif (canvas.width !== displayWidth ||\n\t\tcanvas.height !== displayHeight) {\n\n\t\t// Make the canvas the same size\n\t\tcanvas.width = displayWidth;\n\t\tcanvas.height = displayHeight;\n\t}\n}\n\n","import vertexShaderSource from 'shaders/vertex';\nimport fragmentShaderSource from 'shaders/oscillator';\nimport invertShaderSource from 'shaders/invertRGB';\nimport { AttributeType, BufferData } from 'utility/glTypes';\nimport {\n\tcreateProgram, createShader, createBuffer, bindVertexAttribute\n} from 'utility/glHelpers';\nimport { resizeCanvas } from 'utility/resizeCanvas';\n\n\n\nexport function render(gl: WebGLRenderingContext) {\n\tresizeCanvas(gl.canvas);\n\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n\tconst pixelShaderProgramAttributes = [\n\t\t{\n\t\t\tidentifier: 'position',\n\t\t\ttype: 'vec2',\n\t\t\tbuffer: createBuffer(\n\t\t\t\tgl,\n\t\t\t\tnew Float32Array([\n\t\t\t\t\t-1, -1,\n\t\t\t\t\t1, -1,\n\t\t\t\t\t-1, 1,\n\t\t\t\t\t-1, 1,\n\t\t\t\t\t1, -1,\n\t\t\t\t\t1, 1\n\t\t\t\t]),\n\t\t\t\tgl.STATIC_DRAW)\n\t\t},\n\t\t{\n\t\t\tidentifier: 'a_texCoord',\n\t\t\ttype: 'vec2',\n\t\t\tbuffer: createBuffer(\n\t\t\t\tgl,\n\t\t\t\tnew Float32Array([\n\t\t\t\t\t0, 0,\n\t\t\t\t\t1, 0,\n\t\t\t\t\t0, 1,\n\t\t\t\t\t0, 1,\n\t\t\t\t\t1, 0,\n\t\t\t\t\t1, 1,\n\t\t\t\t]),\n\t\t\t\tgl.STATIC_DRAW)\n\t\t},\n\t] as AttributeSpecification[];\n\n\t\n\tconst startProgram = createProgramWithFragmentShader(gl, fragmentShaderSource);\n\tconst startProgramAttributes =\n\t\tbuildAttributesDictionary(gl, pixelShaderProgramAttributes, startProgram);\n\tactivateProgram(\n\t\tgl,\n\t\tstartProgram,\n\t\tstartProgramAttributes,\n\t\t{});\n\n\n\tconst renderTexture = createAndSetupTexture(gl);\n\n\tgl.bindTexture(\n\t\tgl.TEXTURE_2D,\n\t\trenderTexture);\n\tgl.texImage2D(\n\t\tgl.TEXTURE_2D, 0, gl.RGBA, gl.canvas.width, gl.canvas.height, 0,\n\t\tgl.RGBA, gl.UNSIGNED_BYTE, null);\n\n\tconst framebuffer = gl.createFramebuffer();\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\tgl.framebufferTexture2D(\n\t\tgl.FRAMEBUFFER,\n\t\tgl.COLOR_ATTACHMENT0,\n\t\tgl.TEXTURE_2D,\n\t\trenderTexture,\n\t\t0);\n\n\n\t// Set texture-targeted framebuffer.\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n\n\tconst primitiveType = gl.TRIANGLES;\n\tconst drawOffset = 0;\n\tconst drawCount = 6;\n\tgl.drawArrays(primitiveType, drawOffset, drawCount);\n\t\n\n\tconst invertProgram = createProgramWithFragmentShader(gl, invertShaderSource);\n\tconst invertProgramAttributes =\n\t\tbuildAttributesDictionary(\n\t\t\tgl,\n\t\t\tpixelShaderProgramAttributes,\n\t\t\tinvertProgram);\n\tactivateProgram(\n\t\tgl,\n\t\tinvertProgram,\n\t\tinvertProgramAttributes,\n\t\tbuildUniformsDictionary(\n\t\t\tgl,\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tidentifier: 'inputTextureDimensions',\n\t\t\t\t\tvalue: [gl.canvas.width, gl.canvas.height]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tidentifier: 'inputTexture',\n\t\t\t\t\tvalue: renderTexture\n\t\t\t\t}\n\t\t\t],\n\t\t\tinvertProgram));\n\n\t// this should set the sampler2D uniform, i think\n\tgl.bindTexture(gl.TEXTURE_2D, renderTexture);\n\n\n\t// draw to canvas\n\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n\n\tgl.drawArrays(primitiveType, drawOffset, drawCount);\n\n}\n\nfunction createAndSetupTexture(gl: WebGLRenderingContext): WebGLTexture {\n\tconst texture = gl.createTexture();\n\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\n\t// Set up texture so we can render any size image and so we are\n\t// working with pixels.\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\tif (texture == null) {\n\t\tthrow new Error(\"Failed to create texture\");\n\t}\n\n\treturn texture;\n}\n\ninterface AttributeData {\n\tlocation: number;\n\tbuffer: WebGLBuffer;\n\ttype: AttributeType;\n};\n\ntype AttributeDictionary = { [identifier: string]: AttributeData };\n\nfunction createProgramWithFragmentShader(\n\tgl: WebGLRenderingContext,\n\tfragmentShaderSource: string\n): WebGLProgram  {\n\tconst vertexShader =\n\t\tcreateShader(\n\t\t\tgl,\n\t\t\tgl.VERTEX_SHADER,\n\t\t\tvertexShaderSource);\n\n\tconst fragmentShader =\n\t\tcreateShader(\n\t\t\tgl,\n\t\t\tgl.FRAGMENT_SHADER,\n\t\t\tfragmentShaderSource);\n\n\treturn createProgram(gl, [vertexShader, fragmentShader]);\n}\n\ninterface AttributeSpecification {\n\tidentifier: string;\n\ttype: AttributeType;\n\tbuffer: WebGLBuffer\n}\n\nfunction buildAttributesDictionary(\n\tgl: WebGLRenderingContext,\n\tattributeSpecifications: AttributeSpecification[],\n\tprogram: WebGLProgram\n): AttributeDictionary {\n\treturn attributeSpecifications\n\t\t.map(({ identifier, buffer, type }) => ({\n\t\t\t[identifier]: {\n\t\t\t\tlocation: gl.getAttribLocation(program, identifier),\n\t\t\t\tbuffer,\n\t\t\t\ttype: type as AttributeType\n\t\t\t}\n\t\t}))\n\t\t.reduce((acc, elm) => Object.assign(acc, elm), {});\n}\n\ntype UniformValue\n\t= number\n\t| number[]\n\t| WebGLTexture\n\t;\n\ninterface UniformSpecification {\n\tidentifier: string;\n\tvalue: UniformValue;\n}\n\ninterface UniformData {\n\tlocation: WebGLUniformLocation;\n\tvalue: UniformValue;\n}\n\nfunction buildUniformsDictionary(\n\tgl: WebGLRenderingContext,\n\tuniformSpecifications: UniformSpecification[],\n\tprogram: WebGLProgram\n): { [iden: string]: UniformData } {\n\treturn uniformSpecifications\n\t\t.map(spec => {\n\t\t\tconst location = gl.getUniformLocation(program, spec.identifier);\n\t\t\tif (location == null) {\n\t\t\t\tthrow new Error(\"Invalid uniform\");\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t[spec.identifier]: {\n\t\t\t\t\tlocation,\n\t\t\t\t\tvalue: spec.value\n\t\t\t\t}\n\t\t\t};\n\t\t})\n\t\t.reduce((acc, elm) => Object.assign(acc, elm), {});\n}\n\n\nfunction activateProgram(\n\tgl: WebGLRenderingContext,\n\tprogram: WebGLProgram,\n\tattributes: AttributeDictionary,\n\tuniforms: { [iden: string]: UniformData }\n) {\n\tgl.useProgram(program);\n\n\tObject.keys(attributes)\n\t\t.map(iden => attributes[iden])\n\t\t.forEach(attribute => {\n\t\t\tgl.enableVertexAttribArray(attribute.location)\n\t\t\tbindVertexAttribute(\n\t\t\t\tgl,\n\t\t\t\tattribute.buffer,\n\t\t\t\tattribute.location,\n\t\t\t\tattribute.type,\n\t\t\t\tfalse);\n\t\t});\n\n\tlet numberOfBoundTextures = 0;\n\tObject.keys(uniforms)\n\t\t.map(iden => uniforms[iden])\n\t\t.forEach(uniform => {\n\t\t\tif (typeof uniform.value === 'number') {\n\t\t\t\tgl.uniform1f(uniform.location, uniform.value);\n\t\t\t} else if (uniform.value instanceof WebGLTexture) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + numberOfBoundTextures);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, uniform.value);\n\t\t\t\tgl.uniform1i(uniform.location, numberOfBoundTextures);\n\n\t\t\t\tnumberOfBoundTextures++;\n\t\t\t} else if (uniform.value instanceof Array) {\n\t\t\t\tif (uniform.value.length === 2) {\n\t\t\t\t\tgl.uniform2f(uniform.location, uniform.value[0], uniform.value[1]);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Unsupported vector length\");\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n\n\n","import { render } from 'render';\n\nconst stage = document.getElementById(\"stage\") as HTMLCanvasElement;\nconst gl = stage.getContext('webgl');\n\nif (gl == null) {\n\tthrow new Error(\"WebGL not supported\");\n}\n\nrender(gl);\n\n"],"names":["fragmentShaderSource"],"mappings":"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"}